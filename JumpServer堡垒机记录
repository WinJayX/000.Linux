cd JenkinsData/

cd work
cd workspace/

cd solotest

vim /etc/nginx/conf.d/8888Jenkins.conf 
cd /etc/nginx/conf.d/

cd ..
vim nginx.conf
nginx -v
vim nginx.conf
nginx -t
systemctl restart nginx.service 
netstat -nltop | grep 80
vim nginx.conf
nginx -t
systemctl restart nginx.service 
netstat -nltop | grep 80
ps -ef | grep 80
lsof :80
lsof -i :80
lsof -i:80
systemctl stop nginx.service 
lsof -i:80
systemctl disable nginx.service 
cd /

cd home/Jenkins/

cat start.sh 
docker container stop Jenkins 
vim start.sh 
docker ps -a
./start.sh 
docker ps -a
cd /usr/local/maven/bin/
cd /usr/share/apache-maven/bin/

cat m2.conf 
ll m2.conf 
cat /etc/m2.conf 

pwd
rm -rf m2.conf 

cp /etc/m2.conf .
cd ../conf/

ll logging/
cd ..

ls /etc/maven/
ls conf/
docker ps -a
htop 

cd /home/

cd Jenkins/

cd JenkinsData/

cd workspace/

cd solotest

cd target/

docker ps -a
docker exec -it test-solo bash
docker ps -a
ssh root@git.nercoa.com
ssh-copy-id git@git.nercoa.com
ssh git@git.nercoa.com
ssh git@git.nercoa.com /bin/bash
cat ~/.ssh/id_rsa
docker image ls
java --version

cd /home/

cd WinJay/

tree 
rm -rf D* Music/ Pictures/ Public/ Templates/ Videos/

cd /usr/local/jdk/

cat /home/Jenkins/start.sh 
cd /usr/java/

rpm -ivh /home/WinJay/jdk-8u231-linux-x64.rpm 

mv jdk1.8.0_231-amd64/ jdk1.8.0

ls jdk1.8.0/
ls jdk-11.0.5
ls jdk-11.0.4

cd jdk-11.0.4/

cd ..
rm -rf jdk-11.0.4/
mv jdk1.8.0/ jdk-1.8.0
docker container stop Jenkins 
cd jdk-1.8.0/
pwd
vim /home/Jenkins/start.sh 
sh /home/Jenkins/start.sh 
docker container  ls
cd /home/Jenkins/JenkinsData/workspace/

cd java-demo

cat Dockerfile 
grep version *
ack version
grep version *

cd target/

cd ..

ls target/
docker ps -a
scp -p 65080 /home/WinJay/jdk-8u231-linux-x64.rpm root@jenkins.nercoa.com:/home/
scp -P 65080 /home/WinJay/jdk-8u231-linux-x64.rpm root@jenkins.nercoa.com:/home/
cd /home/Jenkins/JenkinsData/workspace/solotest

cd src/main/webapp/skins/

exit
clear
docker exec -it Jenkins bash
clear
HOST=jenkins.nercoa.com
ssh -p 65080 root@HOST
echo $HOST
ssh -p 65080 root@HOST
cat /home/Jenkins/start.sh 
clear
yum install docker-compose.noarch -y
clear
docker container ls
cd /home/Jenkins/

cat start.sh 
./start.sh 
docker container ls

cd JenkinsData/

vim config.xml 
grep  Kohsuke Kawaguchi *
grep httpPort=80
grep httpPort=80 *

cd war/

grep httpPort=80

cd ..

vim config.xml 

pwd
cat /home/Jenkins/start.sh 

yum install ack.noarch -y
pwd
ack --help
ack -i 8080
ack -i httpPort=80
ack -i httpPo
ack -i httpP

pwd
ack 127.0.0.1
cd /home/WinJay/

rz -E

docker container ls
docker restart Jenkins 
netstat nltop | grep 80
netstat -nltop | grep 80
systemctl status firewalld.service 
docker container ls
curl -I 127.0.0.1
pwd

cd /home/

cd Jenkins/

cat start.sh 
docker container ls
docker stop Jenkins 

docker container ls
./start.sh 
docker container ls
curl -I 127.0.0.1
docker image ls
docker logs Jenkins 
java
java -version
which java
whereis java
cat start.sh 
cd /usr/java/jdk-1.8.0/bin/
ls
java -version
java --version
cd -
ls
whereis java
cd -
ls
cd ..
ls
cd ..
ls
cd jdk-11.0.5
ls
cd bin/
ls
java -version
cd ..
ls
pwd
cd /home/Jenkins/
vim start.sh 
docker container ls
docker rm -f Jenkins 
ls
./start.sh 
docker container ls
lear
clear 
docker logs  Jenkins 
curl -I 127.0.0.1
ls
htop
docker ps -a
docker container rm -f solo 
docker ps -a
df -Th
ip a
df -Th
lsblk
vgscan 
pvscan 
lvscan 
docker ps -a
ip a
docker ps -a
docker image ls
ls
pwd
ls
df -Th
pvscan 
vgscan 
lvscan 
pvdisplay 
vgdisplay 
lvdisplay 
docker image ls
docker rmi harbor.nercoa.com/winjay/test-solo:master harbor.nercoa.com/winjay/java-demo:master cb23ba4a2f8e 3d3000ca0fdb
docker image ls
docker rmi d5da83118327
docker image ls
docker ps -a
yum update -y
docker ps -a
docker ps -aq
htop
ip a
ping www.baidu.com
yum install telnet
df -Th
hostnamectl --static set-hostname JumpServer
exit
lsblk
fdisk 
fdisk /dev/sda 
partprobe
lsblk
mkfs.xfs /dev/sda3 
ls
pwd
cd /mnt/
ls
cd Data/
ls
cd ..
mkdir JumpData
docker ps -a
mount /dev/sda3 /mnt/Data/
df -Th
cd /mnt/Data/
ls
mkdir JumpData
mkdir DockerData
yum update  -y
telnet 202.205.161.87 80
telnet www.nerc.edu.cn 65080
yum -y install wget gcc epel-release git
yum -y install redis
systemctl enable redis
systemctl start redis
yum -y install mariadb mariadb-devel mariadb-server MariaDB-shared
mysql -uroot -e "create database jumpserver default charset 'utf8'; grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by 'nerc.nerc/1'; flush privileges;"
systemctl enable mariadb.service && systemctl start mariadb.service 
mysql -uroot -e "create database jumpserver default charset 'utf8'; grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by 'nerc.nerc/1'; flush privileges;"
nginx -V
yum -y install python36 python36-devel
df -Th
cd /mnt/JumpData/
ls
mkdir opt
cd opt/
git clone --depth=1 https://github.com/jumpserver/jumpserver.git
yum -y install $(cat /mnt/JumpData/opt/jumpserver/requirements/rpm_requirements.txt)
pip install wheel
python3.6 -m venv py3
source /mnt/JumpData/opt/py3/bin/activate
pip install wheel
pip install --upgrade pip setuptools
pip install -r /mnt/JumpData/opt/jumpserver/requirements/requirements.txt
pwd
ls
cd jumpserver/
ls
cp config_example.yml config.yml
SECRET_KEY=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 50`
echo "SECRET_KEY=$SECRET_KEY" >> ~/.bashrc
BOOTSTRAP_TOKEN=`cat /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`
echo "BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN" >> ~/.bashrc
$ sed -i "s/SECRET_KEY:/SECRET_KEY: $SECRET_KEY/g" /opt/jumpserver/config.yml
sed -i "s/SECRET_KEY:/SECRET_KEY: $SECRET_KEY/g" /opt/jumpserver/config.yml
sed -i "s/SECRET_KEY:/SECRET_KEY: $SECRET_KEY/g" /mnt/JumpData/opt/jumpserver/config.yml
sed -i "s/BOOTSTRAP_TOKEN:/BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN/g" /mnt/JumpData/opt/jumpserver/config.yml
sed -i "s/# DEBUG: true/DEBUG: false/g" /mnt/JumpData/opt/jumpserver/config.yml
sed -i "s/# LOG_LEVEL: DEBUG/LOG_LEVEL: ERROR/g" /mnt/JumpData/opt/jumpserver/config.yml
sed -i "s/# SESSION_EXPIRE_AT_BROWSER_CLOSE: false/SESSION_EXPIRE_AT_BROWSER_CLOSE: true/g" /mnt/JumpData/opt/jumpserver/config.yml
sed -i "s/DB_PASSWORD: /DB_PASSWORD: $DB_PASSWORD/g" /mnt/JumpData/opt/jumpserver/config.yml
echo -e "\033[31m 你的SECRET_KEY是 $SECRET_KEY \033[0m"
echo -e "\033[31m 你的BOOTSTRAP_TOKEN是 $BOOTSTRAP_TOKEN \033[0m"
vim config.yml 
wget -O /usr/lib/systemd/system/jms.service https://demo.jumpserver.org/download/shell/centos/jms.service
vim /usr/lib/systemd/system/jms.service 
ls
pwd
vim /usr/lib/systemd/system/jms.service 
chmod 755 /usr/lib/systemd/system/jms.service
systemctl enable jms
systemctl start jms.service 
pwd
ls
./jms start -d
systemctl status jms
yum install -y yum-utils device-mapper-persistent-data lvm2
Server_IP=`ip addr | grep 'state UP' -A2 | grep inet | egrep -v '(127.0.0.1|inet6|docker)' | awk '{print $2}' | tr -d "addr:" | head -n 1 | cut -d / -f1`
echo -e "\033[31m 你的服务器IP是 $Server_IP \033[0m"
pwd
./jms stop
pwd
ls
cd /mnt/
ls
cd Data/
ls
cd JumpData/
ls
cd opt/
cd jumpserver/
ls
./jms -d start
exit
pwd
source /mnt/Data/JumpData/opt/py3/bin/activate
pwd
ls
cd /mnt/Data/JumpData/opt/jumpserver/
ls
./jms -d start
vim jms 
exit
cd /mnt/Data/JumpData/opt/
ls
python3.6 -m venv py3
source /mnt/Data/JumpData/opt/py3/bin/activate
cd jumpserver/
./jms start -d
pwd
ls
cd ..
ls
curl http://demo.jumpserver.org/download/docker/daemon.json
wget http://demo.jumpserver.org/download/docker/daemon.json
ls
cat daemon.json 
cat /etc/docker/daemon.json 
docker run --name jms_koko -d -p 2222:2222 -p 127.0.0.1:5000:5000 -e CORE_HOST=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_koko:1.5.6
docker ps -a
ls
rm -rf daemon.json 
wget https://github.com/jumpserver/luna/releases/download/1.5.6/luna.tar.gz
tar xf luna.tar.gz
ls
chown -R root:root luna
cd /etc/nginx/conf.d/
ls
cat 8888Jenkins.conf 
vim jumpserver.conf
vim 8888Jenkins.conf 
nginx -t
systemctl restart nginx.service 
systemctl enable nginx.service 
pwd
cd /mnt/Data/JumpData/opt/jumpserver/
ls
./jms status
./jms start -d
ls
ll
cd ..
ls
ll
cd jumpserver/
vim jms 
docker container stop jms_guacamole jms_koko 
systemctl daemon-reload 
systemctl start docker
exit
cd /mnt/Data/JumpData/
ls
pwd
cd ../..
ls
tree Data/
tree hgfs/
tree JumpData/
tree Data/
rm -rf Data/
cd JumpData/
ls
cd opt/
ls
cd jumpserver/
ls
pwd
cd ..
ls
cd py3/
ls
cd ../jumpserver/
ls
pwd
systemctl status jms.service 
systemctl status jms.service -l
mysql -u jumpserver -p
systemctl status mariadb.service 
mysql -u root -p
mysql_secure_installation 
mysql -u root -p
vim config.yml 
pwd
ls
cd ..
ls
cd ..
ls
cd ..
ls
rm -rf hgfs/
lsblk
df -Th
systemctl stop jms
pwd
cd Data/
ls
cd ..
mv JumpData/ Data/
ls
du -sh 
cd Data/
ls
cd JumpData/
ls
cd opt/
ls
pwd
cd jumpserver/
vim config.yml 
df -Th
pwd
vim /usr/lib/systemd/system/jms.service 
systemctl status jms
netstat -nltop
docker run --name jms_guacamole -d -p 127.0.0.1:8081:8080 -e JUMPSERVER_SERVER=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_guacamole:1.5.6
pwd
ls
./jms statu
./jms status
systemctl start jms.service 
systemctl status jms -l
docker ps -a
vim /usr/lib/systemd/system/jms.service 
pwd
cd /opt/
docker image ls
pwd
ls
cd /mnt/Data/JumpData/
ls
df -Th
docker ps -a
docker container rm -f jms_guacamole jms_koko 
ls
cd ..
ls
mkdir DockerData
ls
cd DockerData/
pwd
systemctl stop docker
vim /etc/docker/daemon.json 
cd /var/lib/docker
ls
du -sh
cp -rf * /mnt/Data/DockerData/
ls
cd /mnt/Data/DockerData/
ls
mkdir docker
rm -rf *
mkdir docker
rm -rf docker/
cp -rf /var/lib/docker ./
ls
cd docker/
ls
mv /var/lib/docker{,.bak}
ls /var/lib/docker.bak/
systemctl start docker
docker info
vim /etc/docker/daemon.json 
systemctl start docker
vim /etc/docker/daemon.json 
systemctl start docker
vim /etc/docker/daemon.json 
cat /etc/docker/daemon.json 
systemctl status docker
systemctl status docker -l
vim /etc/docker/daemon.json 
systemctl daemon-reload 
systemctl restart docker
systemctl status docker.service 
docker info 
cd /mnt/Data/DockerData/
ls
cd ../
ls
cd JumpData/
ls
cd opt/
ls
mv * ../
ls
cd ..
ls
rm -rf opt/
rm -rf luna.tar.gz 
rm -rf jumpserver/
ls
rm -rf py3/
ls
pwd
ll
cd jumpserver/
cp config_example.yml config.yml
sed -i "s/SECRET_KEY:/SECRET_KEY: $SECRET_KEY/g" /mnt/Data/JumpData/jumpserver/config.yml
sed -i "s/BOOTSTRAP_TOKEN:/BOOTSTRAP_TOKEN: $BOOTSTRAP_TOKEN/g" /mnt/Data/JumpData/jumpserver/config.yml
sed -i "s/# DEBUG: true/DEBUG: false/g" /mnt/Data/JumpData/jumpserver/config.yml
sed -i "s/# LOG_LEVEL: DEBUG/LOG_LEVEL: ERROR/g" /mnt/Data/JumpData/jumpserver/config.yml
sed -i "s/# SESSION_EXPIRE_AT_BROWSER_CLOSE: false/SESSION_EXPIRE_AT_BROWSER_CLOSE: true/g" /mnt/Data/JumpData/jumpserver/config.yml
sed -i "s/DB_PASSWORD: /DB_PASSWORD: $DB_PASSWORD/g" /mnt/Data/JumpData/jumpserver/config.yml
vim config.yml 
cd /mnt/Data/JumpData/py3/lib64/python3.6/site-packages/
ls
cd ..
ls
cd ..
ls
cd ..
ls
ll'
ll
systemctl status firewalld.service 
curl 127.0.0.1:8080
ls
pwd
cd /home/Jenkins/
ls
cat start.sh 
ls
cd JenkinsData/
ls
cd ..
yum -y install python36 python36-devel
pwd
cd /mnt/Data/JumpData/
ls
pwd
ls
python3.6 -m venv py3
ls
source py3/bin/activate
git clone --depth=1 https://github.com/jumpserver/jumpserver.git
ls
pwd
ls
yum -y install $(cat /mnt/JumpData/jumpserver/requirements/rpm_requirements.txt)
yum -y install $(cat /mnt/Data/JumpData/jumpserver/requirements/rpm_requirements.txt)
yum list installed | grep pyasn1
ls
cd pyasn1-0.4.8/
ls
python setup.py build
python setup.py install
cd ..
ls
tar -xzvf Django-2.2.tar.gz 
ls
cd Django-2.2/
python setup.py build
python setup.py install
cd ..
ls
tar -xzvf cryptography-2.7.tar.gz 
cd cryptography-2.7/
ls
python setup.py build
python setup.py install
pip install wheel
pip install --upgrade pip setuptools
pip install -r /mnt/Data/JumpData/jumpserver/requirements/requirements.txt
cat /mnt/Data/JumpData/jumpserver/requirements/requirements.txt
vim /mnt/Data/JumpData/jumpserver/requirements/requirements.txt
pip install -r /mnt/Data/JumpData/jumpserver/requirements/requirements.txt
ls
cd ..
ls
vim /mnt/Data/JumpData/jumpserver/requirements/requirements.txt
pip install -r /mnt/Data/JumpData/jumpserver/requirements/requirements.txt
cd jumpserver/
ls
./jms -d start
./jms start -d
./jms status
netstat -nltop
htop
systemctl status nginx.service 
systemctl start nginx.service 
systemctl status nginx.service 
cd /mnt/Data/JumpData/
ls
rz -E
ls
tar -xzvf pyasn1-0.4.8.tar.gz 
ls
rz -E
pwd
reboot
docker run --name jms_guacamole -d -p 127.0.0.1:8081:8080 -e JUMPSERVER_SERVER=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_guacamole:1.5.6
docker status
docker info
systemctl restart docker
docker ps -a
docker rm -f jms_koko 
docker run --name jms_guacamole -d -p 127.0.0.1:8081:8080 -e JUMPSERVER_SERVER=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_guacamole:1.5.6
ls
pwd
cd /mnt/Data/JumpData/
ls
curl http://localhost:8080
curl http://127.0.0.1:8080
curl http://202.205.161.93:8080
cd /mnt/Data/JumpData/
ls
cd jumpserver/
ls
pwd
vim /usr/lib/systemd/system/jms.service 
systemctl daemon-reload 
systemctl status jms.service 
cat /usr/lib/systemd/system/jms.service 
ls ../
pwd
systemctl reload jms
systemctl status jms
netstat -nltop
pwd
systemctl status jms
systemctl start jms
systemctl status jms
Server_IP=`ip addr | grep 'state UP' -A2 | grep inet | egrep -v '(127.0.0.1|inet6|docker)' | awk '{print $2}' | tr -d "addr:" | head -n 1 | cut -d / -f1`
echo -e "\033[31m 你的服务器IP是 $Server_IP \033[0m"

docker run --name jms_koko -d -p 2222:2222 -p 127.0.0.1:5000:5000 -e CORE_HOST=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_koko:1.5.6
df -Th
docker image ls
docker run --name jms_koko -d -p 2222:2222 -p 127.0.0.1:5000:5000 -e CORE_HOST=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_koko:1.5.6
docker ps -a

vim /etc/nginx/conf.d/jumpserver.conf 
nginx -t
systemctl restart nginx.service 
curl 127.0.0.1 
curl 127.0.0.1:8080
nginx -t
vim /etc/nginx/conf.d/jumpserver.conf 
getenforce 
vim /etc/selinux/config 
getenforce 
setenforce 1
getenforce 
setenforce 0
getenforce 
htop
docker ps -a
docker image ls
pwd
ls
ll luna/
ls -ld luna/
chown -R root:root luna
ls -ld luna/
chmod -R 755 luna/
ls -ld luna/
ll luna/
df -Th
systemctl restart jms.service 
pwd
lsblk
vim /etc/fstab 
reboot
cd /mnt/Data/
ls
pwd
ls
cd ..
ls
lsblk
cd /mnt/
ls
cd Data/
ls
cd DockerData/
ls
ll
du -sh 
du -sh
mount /dev/sda3 /mnt/Data/
ls
cd ..
ls
cd JumpData/
ls
python3.6 -m venv py3
source py3/bin/activate
ls
cd jumpserver/
ls
./jms start -d
netstat -nltop 
./jms status
./jms stop
./jms status
netstat -nltop 
telnet 202.205.161.82 65082
htop
pwd
ls
cd /mnt/Data/
cd JumpData/
ls
cd jumpserver/data/
ls
cd media/
ls
cd replay/
ls
ll
du -sh *
cd 2020-03-12/
ls
pqs
pwd
vim /etc/nginx/conf.d/jumpserver.conf 
cd ../../../
ls
pwd
cd ../..
ls
cd luna/
ls
ls ../jumpserver/data/
ls ../jumpserver/data/media/replay/
ping rd.nercoa.com
cd /mnt/Data/JumpData/
ls
cd jumpserver/
ls
systemctl status jms.service 
systemctl enable jms.service
systemctl status jms.service 
systemctl enable jms.service
systemctl status jms.service 
systemctl restart jms
systemctl status jms.service -l
w
pwd
ip a
who
htop
exit
exit
docker image ls
jumpserver/jms_guacamole:1.5.7
docker pull jumpserver/jms_guacamole:1.5.7
docker ps -a
docker rmi wojiushixiaobai/jms_*
docker rmi wojiushixiaobai/jms_guacamole:1.5.6 wojiushixiaobai/jms_koko:1.5.6 
docker image ls
docker ps -a
ftp 218.22.21.229
yum install ftp -y
ftp 218.22.21.229:21012
ftp 218.22.21.229 -p 21012
ftp 218.22.21.229 21012
docker ps -a
docker image ls
docker pull jumpserver/jms_koko:1.5.7
docker image ls
docker ps -a
Server_IP=`ip addr | grep 'state UP' -A2 | grep inet | egrep -v '(127.0.0.1|inet6|docker)' | awk '{print $2}' | tr -d "addr:" | head -n 1 | cut -d / -f1`
echo -e "\033[31m 你的服务器IP是 $Server_IP \033[0m"
docker rm -f `docker ps -aq`
docker ps -arun --name jms_koko -d -p 2222:2222 -p 127.0.0.1:5000:5000 -e CORE_HOST=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN -e LOG_LEVEL=ERROR --restart=always jumpserver/jms_koko:1.5.7run --name jms_guacamole -d -p 127.0.0.1:8081:8080 -e JUMPSERVER_SERVER=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN -e GUACAMOLE_LOG_LEVEL=ERROR --restart=always jumpserver/jms_guacamole:1.5.7systemctl restart jms.service 
systemctl status jms.service 
df -Th
cd /mnt/Data/
ls
cd JumpData/
ls
systemctl status jms
getenforce 
docker ps -a
docker exec -it jms_guacamole bash
docker ps -a
cat ~/.bash
cat ~/.bashrc 
docker ps -a
docker exec -it jms_guacamole bash
 docker stop jms_guacamole
 docker rm jms_guacamole
docker ps -a
Server_IP=`ip addr | grep 'state UP' -A2 | grep inet | egrep -v '(127.0.0.1|inet6|docker)' | awk '{print $2}' | tr -d "addr:" | head -n 1 | cut -d / -f1`
echo $Server_IP
docker run --name jms_guacamole -d -p 127.0.0.1:8081:8080 -e JUMPSERVER_SERVER=http://$Server_IP:8080 -e BOOTSTRAP_TOKEN=$BOOTSTRAP_TOKEN --restart=always wojiushixiaobai/jms_guacamole:1.5.6
htop
docker ps -a
htop
systemctl status nginx.service 
cd /etc/nginx/conf.d/
ls
cat 8888Jenkins.conf 
telnet 202.205.161.101 10051
telnet zabbix.nercoa.com 10051
cat zabbix.nercoa.com.conf 
rm -rf zabbix.nercoa.com.conf 
cat zc.nercoa.com.conf 
rm -rf zc.nercoa.com.conf 
ls
netstat -ntlpo
htop
cd /etc/nginx/conf.d/
ls
cat jumpserver.conf 
cat 8888Jenkins.conf 
cp 8888Jenkins.conf zc.nercoa.com.conf
vim zc.nercoa.com.conf 
nginx -t
curl zc.nerc-edu.net
systemctl restart nginx.service 
cat zc.nercoa.com.conf 
ping zc.nerc-edu.net
curl zc.nerc-edu.net
vim zc.nercoa.com.conf 
systemctl restart nginx.service 
nginx -t
cp zc.nercoa.com.conf zabbix.nercoa.com
vim zabbix.nercoa.com 
nginx -t
systemctl restart nginx.service 
curl 202.205.161.101
cat zabbix.nercoa.com 
vim zabbix.nercoa.com 
cat zc.nercoa.com.conf 
cat zabbix.nercoa.com 
vim zabbix.nercoa.com 
nginx -t
systemctl restart nginx.service 
vim zabbix.nercoa.com 
mv zabbix.nercoa.com zabbix.nercoa.com.conf
nginx -t
systemctl restart nginx
date
docker ps -a
yum update -y
java -version
docker ps -a
netstat -nltop
systemctl restart nginx
yum -y install wget gcc epel-release git
yum -y install mariadb mariadb-devel mariadb-server MariaDB-shared redis
yum -y install mariadb-shared 
yum search mariadb-*
yum search mariadb*
reboot
systemctl status nginx
 cd /etc/nginx/conf.d/
ls
cat jumpserver.conf 
clear
yum install screen -y
telnet 219.142.50.120 65081
telnet 219.142.50.120 1433
ping 219.142.50.120
traceroute 219.142.50.120
ping 219.142.50.1
cat /etc/hosts
ping 219.143.195.82
telnet 219.143.195.82 65081
lsblk
vim /etc/sysconfig/network-scripts/ifcfg-ens33 
systemctl restart network
telnet 39.105.202.151 65080
ip a
ip a
 ip a | grep 109
ps -ef | grep jm
reboot
docker ps -a
vim /etc/sysconfig/network-scripts/ifcfg-ens33 
systemctl restart network
docker restart jms_guacamole jms_koko 
docker exec -it jms_koko bash
docker
docker ps -a
pwd
cd /mnt/Data/
ls
cd DockerData/
ls
cd docker/
ls
cd ..
ls
cd J
ls
pwd
cd ..
ls
cd JumpData/
ls
reboot
cat ~/.bashrc 
docker ps -a
docker exec -it jms_koko /bin/bash
docker exec -it jms_guacamole /bin/bash
vim /etc/sysconfig/network-scripts/ifcfg-ens33 
systemctl restart network
history 
